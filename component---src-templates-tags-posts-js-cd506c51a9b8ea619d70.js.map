{"version":3,"sources":["webpack:///./src/templates/tags-posts.js","webpack:///./node_modules/reactstrap/es/CardSubtitle.js","webpack:///./node_modules/reactstrap/es/CardText.js","webpack:///./src/components/post.js"],"names":["tagQuery","tagPosts","data","pageHeader","pageContext","tag","allMarkdownRemark","totalCount","pageTitle","edges","map","node","key","id","slug","fields","title","frontmatter","date","body","excerpt","tags","fluid","featuredImage","childImageSharp","props","className","cssModule","Tag","attributes","classes","createElement","defaultProps","Post","Card","CardBody","CardTitle","to"],"mappings":"4FAAA,iGA2BaA,EAAQ,aAgCNC,UArDE,SAAC,GAA0B,IAAxBC,EAAuB,EAAvBA,KAGVC,EAHiC,EAAjBC,YACdC,IAEQ,gBADMH,EAAKI,kBAApBC,WACS,gBAChB,OACI,kBAAC,IAAD,CAAQC,UAAWL,GACdD,EAAKI,kBAAkBG,MAAMC,KAAI,gBAAEC,EAAF,EAAEA,KAAF,OAClC,kBAAC,IAAD,CACAC,IAAKD,EAAKE,GACVC,KAAMH,EAAKI,OAAOD,KAClBE,MAAOL,EAAKM,YAAYD,MACxBE,KAAMP,EAAKM,YAAYC,KACvBC,KAAMR,EAAKS,QACXC,KAAMV,EAAKM,YAAYI,KACvBC,MAAOX,EAAKM,YAAYM,cAAcC,gBAAgBF,c,oKCX9D,EAAe,SAAsBG,GACvC,IAAIC,EAAYD,EAAMC,UAClBC,EAAYF,EAAME,UAClBC,EAAMH,EAAMpB,IACZwB,EAAa,YAA8BJ,EAAO,CAAC,YAAa,YAAa,QAE7EK,EAAU,YAAgB,IAAWJ,EAAW,iBAAkBC,GACtE,OAAO,IAAMI,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDH,UAAWI,MAIf,EAAaE,aAhBM,CACjB3B,IAAK,OAgBQ,QCbX,EAAW,SAAkBoB,GAC/B,IAAIC,EAAYD,EAAMC,UAClBC,EAAYF,EAAME,UAClBC,EAAMH,EAAMpB,IACZwB,EAAa,YAA8BJ,EAAO,CAAC,YAAa,YAAa,QAE7EK,EAAU,YAAgB,IAAWJ,EAAW,aAAcC,GAClE,OAAO,IAAMI,cAAcH,EAAK,YAAS,GAAIC,EAAY,CACvDH,UAAWI,MAIf,EAASE,aAhBU,CACjB3B,IAAK,KAgBQ,Q,qBCIA4B,IArBF,SAAC,GAAsC,IAArCjB,EAAoC,EAApCA,MAAOF,EAA6B,EAA7BA,KAAMI,EAAuB,EAAvBA,KAAMC,EAAiB,EAAjBA,KAAMG,EAAW,EAAXA,MACpC,OAEI,kBAACY,EAAA,EAAD,CAAMrB,GAAG,OACL,kBAAC,IAAD,CAAKa,UAAU,WAAYJ,MAAOA,IAClC,kBAACa,EAAA,EAAD,KACI,kBAACC,EAAA,EAAD,KACE,kBAAC,OAAD,CAAMV,UAAU,QAAQW,GAAIvB,GAAOE,IAErC,kBAAC,EAAD,KACI,0BAAMU,UAAU,aAAaR,GAAa,KAE9C,kBAAC,EAAD,KAAWC,GAEX,kBAAC,OAAD,CAAMkB,GAAIvB,EAAMY,UAAU,+BAA1B","file":"component---src-templates-tags-posts-js-cd506c51a9b8ea619d70.js","sourcesContent":["import React from 'react'\r\nimport { graphql } from 'gatsby'\r\nimport Layout from '../components/layout'\r\nimport Post from '../components/post'\r\n\r\n\r\nconst tagPosts = ({ data, pageContext}) => {\r\n    const { tag } = pageContext\r\n    const {totalCount } = data.allMarkdownRemark\r\n    const pageHeader = `${tag} İle Alakalı ${totalCount} Yazı Bulundu`\r\n    return(\r\n        <Layout pageTitle={pageHeader}>\r\n            {data.allMarkdownRemark.edges.map(({node}) => (\r\n            <Post \r\n            key={node.id}\r\n            slug={node.fields.slug}\r\n            title={node.frontmatter.title}\r\n            date={node.frontmatter.date}\r\n            body={node.excerpt}\r\n            tags={node.frontmatter.tags}\r\n            fluid={node.frontmatter.featuredImage.childImageSharp.fluid}\r\n             />\r\n           ))}\r\n        </Layout>\r\n    )\r\n}\r\n\r\nexport const tagQuery = graphql`\r\n    query($tag: String!){\r\n        allMarkdownRemark(\r\n            sort: { fields: [frontmatter___date], order:DESC }\r\n            filter: { frontmatter: { tags: { in: [$tag] } } }\r\n        ){\r\n            totalCount\r\n            edges{\r\n                node{\r\n                    id\r\n                    frontmatter {\r\n                        title\r\n                        date(formatString: \"DD MMMM YYYY, HH:mm\", locale: \"tr\")              \r\n                        tags\r\n                        featuredImage{\r\n                            childImageSharp{\r\n                                fluid(maxWidth: 700){\r\n                                ...GatsbyImageSharpFluid\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n                fields{\r\n                    slug\r\n                }\r\n                excerpt\r\n            }\r\n        }\r\n    }\r\n}\r\n`\r\n\r\nexport default tagPosts","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardSubtitle = function CardSubtitle(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-subtitle'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardSubtitle.defaultProps = defaultProps;\nexport default CardSubtitle;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar defaultProps = {\n  tag: 'p'\n};\n\nvar CardText = function CardText(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-text'), cssModule);\n  return React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardText.defaultProps = defaultProps;\nexport default CardText;","import React from 'react'\r\nimport { Link } from 'gatsby'\r\nimport { Card, CardBody, CardText, CardSubtitle, CardTitle} from 'reactstrap'\r\nimport Img from 'gatsby-image'\r\n\r\nconst Post = ({title, slug, date, body, fluid}) => {\r\n    return(\r\n\r\n        <Card id=\"yan\">\r\n            <Img className=\"card-img\"  fluid={fluid} />\r\n            <CardBody>\r\n                <CardTitle >\r\n                  <Link className=\"title\" to={slug}>{title}</Link>\r\n                </CardTitle>\r\n                <CardSubtitle>\r\n                    <span className=\"text-info\">{date}</span>{' '}\r\n                </CardSubtitle>\r\n                <CardText>{body}</CardText>\r\n            \r\n                <Link to={slug} className=\"btn float-right buttonColor\">Daha Fazla Oku</Link>\r\n            </CardBody>\r\n        </Card>\r\n\r\n    )\r\n}\r\n\r\nexport default Post\r\n/*    <ul className=\"post-tags\">\r\n                    {tags.map(tag => (\r\n                        <li key={tag}>\r\n                            <Link to={`/tag/${slugify(tag)}`}>\r\n                    <Badge className=\"badge\" pill >{tag}</Badge>\r\n                            </Link>\r\n                        </li>\r\n                    ))}\r\n                </ul> */"],"sourceRoot":""}